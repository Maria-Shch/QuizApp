{"version":3,"sources":["index.module.css","components/pages/ResultPage/ResultPage.module.css","components/pages/QuestionPage/QuestionPage/QuestionPage.module.css","components/shared/buttons/Button/Button.module.css","components/shared/buttons/Button/ButtonQuestionPage.module.css","components/pages/HistoryPage/TableWithResults/TableWithResults.module.css","components/pages/MainPage/MainPage.module.css","components/pages/QuestionPage/PossibleAnswers/PossibleAnswers.module.css","components/pages/HistoryPage/HistoryPage/HistoryPage.module.css","components/shared/buttons/Button/ButtonMainPage.module.css","components/shared/buttons/Button/Button.jsx","components/pages/MainPage/MainPage.jsx","components/pages/QuestionPage/PossibleAnswers/PossibleAnswers.jsx","utils/classes/Game.js","utils/classes/Question.js","utils/utilsFunctions.js","components/pages/QuestionPage/QuestionPage/QuestionPage.jsx","components/pages/ResultPage/ResultPage.jsx","components/pages/HistoryPage/TableWithResults/TableWithResults.jsx","components/pages/HistoryPage/HistoryPage/HistoryPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","action","path","className","classNames","cl","button","defineButtonClassName","id","type","value","clMainPage","clQuestionPage","MainPage","clIndex","content","header","div_buttons","PossibleAnswers","answers","possibleAnswers","i","length","push","form_radio_btn","name","htmlFor","getAnswersContent","Game","date","quizId","correctAnswers","this","Question","question","correctAnswer","getQuizById","require","quizes","filter","element","parsingQuizToQuestions","quiz","size","questions","arrQuestions","serialNumber","QuestionPage","state","currentResult","questionNumber","match","params","numberQuestion","nextQuestion","Number","indexArray","numberOfQuestions","next","bind","valueOfButton","checkAnswer","sendFinalResult","res","setState","window","history","pushState","objectWithResults","localStorage","getItem","JSON","parse","games","setItem","stringify","saveToLocalStorage","Math","random","toString","substr","Date","toDateString","document","getElementById","checked","result","setResult","div_next","clButton","ButtonQuestionPage","onClick","React","Component","ResultPage","percentageResult","getText","TableWithResults","arrGames","getHistoryFromLocalStorage","getResults","number","shift","info","subtitle","HistoryPage","App","exact","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.41a955a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"src_header__3jKt_\",\"content\":\"src_content__25hLa\",\"div_buttons\":\"src_div_buttons__2_O6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"ResultPage_header__gxgt6\",\"content\":\"ResultPage_content__TAyKe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"QuestionPage_header__1PH2u\",\"content\":\"QuestionPage_content__1k3Hd\",\"div_next\":\"QuestionPage_div_next__2Qe_6\",\"div_buttons\":\"QuestionPage_div_buttons__FdmcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1vnOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonQuestionPage_button__2xWb6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"TableWithResults_content__3oZDR\",\"info\":\"TableWithResults_info__rmBlU\",\"subtitle\":\"TableWithResults_subtitle__1alyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainPage_header__1dTc-\",\"content\":\"MainPage_content__2ktb_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"possibleAnswers\":\"PossibleAnswers_possibleAnswers__3k8IQ\",\"form_radio_btn\":\"PossibleAnswers_form_radio_btn___hi_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"HistoryPage_header__3ikqG\",\"content\":\"HistoryPage_content__3-ujm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonMainPage_button__QVsLx\"};","import classNames from 'classnames';\r\nimport cl from './Button.module.css';\r\nimport clMainPage from './ButtonMainPage.module.css';\r\nimport clQuestionPage from './ButtonQuestionPage.module.css';\r\n\r\nfunction Button(props) {\r\n    return (\r\n        <form action={props.path}>\r\n            <button \r\n                className={classNames(cl.button, defineButtonClassName(props.className))} \r\n                id = {props.id} \r\n                type = \"submit\">\r\n                    {props.value}\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n// Так как для одного и того же компонента Button на страницах MainPage и QuestionPage я использую разные стили,\r\n// то я передаю имя файла с нужными стилями через props, а затем с помощью функции ButtonClassName определяю, \r\n// какой стиль необходимо использовать для каждого отдельного компонента.\r\nfunction defineButtonClassName(className) {\r\n    if (className == 'ButtonMainPage') return clMainPage.button;\r\n    if (className == 'ButtonQuestionPage') return clQuestionPage.button;\r\n}","import classNames from 'classnames';\r\nimport clIndex from './../../../index.module.css';\r\nimport cl from './MainPage.module.css';\r\nimport Button from '../../shared/buttons/Button/Button.jsx';\r\n\r\nfunction MainPage() {\r\n  return (\r\n    <div className={classNames(clIndex.content, cl.content)}>\r\n      <p className={classNames(clIndex.header, cl.header)}>QuizApp</p>\r\n      <div className={clIndex.div_buttons}>\r\n        <Button className='ButtonMainPage' id='quiz' value='Квиз' path='quiz/1'/>\r\n        <Button className='ButtonMainPage' id='history' value='История' path='history'/>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import cl from './PossibleAnswers.module.css';\r\n\r\nfunction PossibleAnswers(props) {\r\n    const answers = props.answers;\r\n    let getAnswersContent = () => {\r\n        let content = [];\r\n        for (let i = 0; i < answers.length; i++) {\r\n            content.push(\r\n                <div className={cl.form_radio_btn}>\r\n                    <input id={answers[i]} type=\"radio\" name=\"radio\" value={answers[i]} />\r\n                    <label htmlFor={answers[i]}>{answers[i]}</label>\r\n                </div>\r\n            );\r\n        }\r\n        return content;\r\n    };\r\n\r\n    return (\r\n        <div className={cl.possibleAnswers}>\r\n            {getAnswersContent()}\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default PossibleAnswers;\r\n","export default class Game {\r\n    constructor(id, date, quizId, correctAnswers) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.quizId = quizId;\r\n        this.correctAnswers = correctAnswers;\r\n    }\r\n}","export default class Question {\r\n    constructor(id, question,correctAnswer, answers) {\r\n        this.id = id;\r\n        this.question = question;\r\n        this.correctAnswer = correctAnswer;\r\n        this.answers = answers;\r\n    }\r\n}","import Game from './classes/Game';\r\nimport Question from './classes/Question';\r\n\r\nexport function getQuizById(quizId) {\r\n    const questions = require('../data/questions.json');\r\n    const quiz = questions.quizes.filter(element => element.id == quizId);\r\n    return quiz;\r\n}\r\n\r\nexport function getHistoryFromLocalStorage() {\r\n    let history = JSON.parse(localStorage.getItem('history'));\r\n    let arrGames = [];\r\n    if (history != null) {\r\n        const games = history.games;\r\n        const size = games.length;\r\n        for (let i = 0; i < size; i++) {\r\n            arrGames[i] = new Game(\r\n                games[i].id,\r\n                games[i].date,\r\n                games[i].quizId,\r\n                games[i].correctAnswers\r\n            );\r\n        }\r\n        return arrGames;\r\n    }\r\n    else return arrGames;\r\n}\r\n\r\nexport function parsingQuizToQuestions(quiz) {\r\n    const size = quiz[0].questions.length;\r\n    let arrQuestions = [];\r\n    for (let i = 0, serialNumber = 0; i < size; i++) {\r\n        arrQuestions[i] = new Question(\r\n            quiz[0].questions[i].id,\r\n            quiz[0].questions[i].question,\r\n            quiz[0].questions[i].correctAnswer,\r\n            quiz[0].questions[i].answers,\r\n            ++serialNumber,\r\n            size\r\n        );\r\n    }\r\n    return arrQuestions;\r\n}\r\n\r\nexport function saveToLocalStorage(objectWithResults) {\r\n    let h = localStorage.getItem('history');\r\n    let history;\r\n\r\n    if (h === null) {\r\n        history = {\r\n            \"games\": []\r\n        };\r\n    }\r\n    else history = JSON.parse(localStorage.getItem('history'));\r\n\r\n    history.games.push(objectWithResults);\r\n    localStorage.setItem('history', JSON.stringify(history));\r\n}\r\n\r\nexport function getID() {\r\n    return Math.random().toString(36).substr(2, 9);\r\n}","import classNames from 'classnames';\r\nimport clIndex from './../../../../index.module.css';\r\nimport cl from './QuestionPage.module.css';\r\nimport Button from '../../../shared/buttons/Button/Button';\r\nimport clButton from './../../../shared/buttons/Button/Button.module.css';\r\nimport ButtonQuestionPage from './../../../shared/buttons/Button/ButtonQuestionPage.module.css';\r\nimport PossibleAnswers from '../PossibleAnswers/PossibleAnswers';\r\nimport { getQuizById, parsingQuizToQuestions, saveToLocalStorage, getID } from '../../../../utils/utilsFunctions';\r\nimport React from 'react';\r\n\r\nclass QuestionPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentResult: 0,\r\n      questionNumber: props.match.params.numberQuestion,\r\n      nextQuestion: Number(props.match.params.numberQuestion) + 1,\r\n      indexArray: Number(props.match.params.numberQuestion) - 1,\r\n      questions: parsingQuizToQuestions(getQuizById(props.quizId)),\r\n      numberOfQuestions: parsingQuizToQuestions(getQuizById(props.quizId)).length,\r\n      quizId: props.quizId\r\n    };\r\n    this.next = this.next.bind(this);\r\n    this.valueOfButton = this.valueOfButton.bind(this);\r\n    this.checkAnswer = this.checkAnswer.bind(this);\r\n    this.sendFinalResult = this.sendFinalResult.bind(this);\r\n  }\r\n\r\n  next() {\r\n    let res = this.checkAnswer();\r\n    this.setState({\r\n      indexArray: Number(this.state.indexArray) + 1,\r\n      questionNumber: Number(this.state.questionNumber) + 1,\r\n      nextQuestion: Number(this.state.nextQuestion) + 1,\r\n      currentResult: res\r\n    });\r\n\r\n    //При достижении последнего вопроса нажатие кнопки будет перенаправлять на страницу с результатом\r\n    if (this.state.nextQuestion <= this.state.numberOfQuestions) {\r\n      window.history.pushState(null, null, this.state.nextQuestion);\r\n    }\r\n    else {\r\n      const objectForHistoryFile = {\r\n        id: getID(),\r\n        date: new Date().toDateString(),\r\n        quizId: this.state.quizId,\r\n        correctAnswers: res\r\n      }\r\n      saveToLocalStorage(objectForHistoryFile);\r\n\r\n      this.props.history.push('./../result');\r\n      this.sendFinalResult(res);\r\n    }\r\n  }\r\n\r\n  //При достижении последнего вопроса в квизе значение кнопки меняется с 'Дальше' на 'Закончить'\r\n  valueOfButton() {\r\n    if (this.state.questionNumber < this.state.numberOfQuestions) return 'Дальше';\r\n    else return 'Закончить';\r\n  }\r\n\r\n  checkAnswer() {\r\n    let correctAnswer = this.state.questions[this.state.indexArray].correctAnswer;\r\n    let possibleAnswers = this.state.questions[this.state.indexArray].answers;\r\n    let res = this.state.currentResult;\r\n\r\n    for (let i = 0; i < possibleAnswers.length; i++) {\r\n      if (document.getElementById(possibleAnswers[i]).checked && possibleAnswers[i] == correctAnswer) {\r\n        res++;\r\n      }\r\n      document.getElementById(possibleAnswers[i]).checked = false;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  sendFinalResult(result) {\r\n    this.props.setResult(result);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classNames(clIndex.content, cl.content)}>\r\n        <p className={classNames(clIndex.header, cl.header)}>\r\n          {this.state.questionNumber}/{this.state.numberOfQuestions}. {this.state.questions[this.state.indexArray].question}\r\n        </p>\r\n        <PossibleAnswers answers={this.state.questions[this.state.indexArray].answers} />\r\n        <div className={cl.div_next}>\r\n          <button\r\n            className={classNames(clButton.button, ButtonQuestionPage.button)}\r\n            onClick={() => this.next()}\r\n            type=\"submit\">\r\n            {this.valueOfButton()}\r\n          </button>\r\n        </div>\r\n        <div className={classNames(clIndex.div_buttons, cl.div_buttons)}>\r\n          <Button className='ButtonQuestionPage' id='index' value='На главную' path='/../index' />\r\n          <Button className='ButtonQuestionPage' id='history' value='История' path='/../history' />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionPage;","import classNames from 'classnames';\r\nimport clIndex from './../../../index.module.css';\r\nimport cl from './ResultPage.module.css';\r\nimport Button from '../../shared/buttons/Button/Button';\r\nimport { getQuizById, parsingQuizToQuestions } from '../../../utils/utilsFunctions';\r\n\r\nfunction ResultPage(props) {\r\n  const correctAnswers = props.result;\r\n  const quizId = props.quizId;\r\n  const numberOfQuestions = parsingQuizToQuestions(getQuizById(quizId)).length;\r\n  const percentageResult = correctAnswers * 100 / numberOfQuestions;\r\n\r\n  let getText = (correctAnswers, percentageResult) => {\r\n    if (percentageResult < 50) {\r\n      return (\r\n        <div>\r\n          <p className={classNames(clIndex.header, cl.header)}>\r\n            Из {numberOfQuestions} вопросов правильно вы ответили на {correctAnswers}.\r\n          </p>\r\n          <p className={classNames(clIndex.header, cl.header)}>\r\n            Попробуйте ещё раз.\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div>\r\n          <p className={classNames(clIndex.header, cl.header)}>\r\n            Из {numberOfQuestions} вопросов вы правильно ответили на {correctAnswers}.\r\n          </p>\r\n          <p className={classNames(clIndex.header, cl.header)}>\r\n            Превосходно!\r\n          </p>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classNames(clIndex.content, cl.content)}>\r\n      {getText(correctAnswers, percentageResult)}\r\n      <div className={clIndex.div_buttons}>\r\n        <Button className='ButtonQuestionPage' id='quiz' value='Квиз' path='/quiz/1' />\r\n        <Button className='ButtonQuestionPage' id='history' value='История' path='history' />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResultPage;\r\n","import classNames from 'classnames';\r\nimport clIndex from './../../../../index.module.css';\r\nimport cl from './TableWithResults.module.css';\r\nimport { getHistoryFromLocalStorage, getQuizById, parsingQuizToQuestions } from '../../../../utils/utilsFunctions';\r\n\r\nfunction TableWithResults() {\r\n    const games = getHistoryFromLocalStorage();\r\n\r\n    let content = [];\r\n\r\n    function getHistoryContent() {\r\n        if (games.length == 0) content.push(<p className={cl.info}> Будьте первым, кто пройдёт квиз! </p>);\r\n\r\n        else {\r\n            content.push(\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>№</th>\r\n                            <th>Правильные ответы</th>\r\n                            <th>Всего вопросов</th>\r\n                        </tr>\r\n                        {getResults()}\r\n                    </thead>\r\n                </table>\r\n            );\r\n\r\n            if(games.length >10){\r\n                content.push(<p className={cl.subtitle}> *Отображаются последние 10 попыток пользователей </p>);\r\n            }\r\n        }\r\n        return content;\r\n    }\r\n\r\n\r\n    function getResults() {\r\n        let content = [];\r\n        for (let i = 0, number = 1; i < games.length; i++) {\r\n            content.push(\r\n                <tr key={i}>\r\n                    <td key={games[i].id}>{number++}</td>\r\n                    <td>{games[i].correctAnswers}</td>\r\n                    <td>{parsingQuizToQuestions(getQuizById(games[i].quizId)).length}</td>\r\n                </tr>\r\n            );\r\n        }\r\n\r\n        //Урезаю количество записей в таблице до 10 для сохранения её приемлимого размера\r\n        while (content.length > 10) content.shift();\r\n\r\n        return content;\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(clIndex.content, cl.content)}>\r\n            {getHistoryContent()}\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default TableWithResults;\r\n","import classNames from 'classnames';\r\nimport clIndex from './../../../../index.module.css';\r\nimport cl from './HistoryPage.module.css';\r\nimport Button from '../../../shared/buttons/Button/Button';\r\nimport TableWithResults from '../TableWithResults/TableWithResults';\r\n\r\nfunction HistoryPage() {\r\n    return (\r\n        <div className={classNames(clIndex.content, cl.content)}>\r\n            <p className={classNames(clIndex.header, cl.header)}>\r\n                История\r\n            </p>\r\n            <TableWithResults />\r\n            <div className={clIndex.div_buttons}>\r\n                <Button className='ButtonQuestionPage' id='index' value='На главную' path='/index' />\r\n                <Button className='ButtonQuestionPage' id='quiz' value='Квиз' path='quiz/1' />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import './App.css';\r\n\r\nimport React from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport MainPage from './components/pages/MainPage/MainPage'\r\nimport QuestionPage from './components/pages/QuestionPage/QuestionPage/QuestionPage';\r\nimport ResultPage from './components/pages/ResultPage/ResultPage';\r\nimport HistoryPage from './components/pages/HistoryPage/HistoryPage/HistoryPage';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: 0,\r\n      quizId: '07e6bda'\r\n    };\r\n    this.setResult = this.setResult.bind(this);\r\n  }\r\n  setResult(result) {\r\n    this.setState({ result: result });\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/index\" component={MainPage} />\r\n          <Route path=\"/quiz/:numberQuestion\" render={(props) => <QuestionPage quizId={this.state.quizId} setResult={this.setResult} {...props}/>} />\r\n          <Route exact path=\"/result\"  render={() => <ResultPage result={this.state.result} quizId={this.state.quizId}/>} />\r\n          <Route exact path=\"/history\" component={HistoryPage} />\r\n        </Switch>\r\n      </BrowserRouter >\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}